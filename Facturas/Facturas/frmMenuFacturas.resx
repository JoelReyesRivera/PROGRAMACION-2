<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAKwNAACsDQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABZWVkAWVlZBVlZWXNZWVnrWVlZ/llZWf1ZWVn9WVlZ/VlZWf1ZWVn9WVlZ/VlZ
        Wf1ZWVn9WVlZ/VlZWf1ZWVn9WVlZ/VlZWf1ZWVn9WVlZ/VlZWf1ZWVn9WVlZ/llZWetZWVlzWVlZBVlZ
        WQAAAAAAAAAAAAAAAAAAAAAAWVlZAFlZWQBZWVlBWVlZ5llZWZZZWVlbWVlZXFlZWVxZWVlcWVlZXFlZ
        WVxZWVlcWVlZXFlZWVxZWVlcWVlZXFlZWVxZWVlcWVlZXFlZWVxZWVlcWVlZXFlZWVxZWVlbWVlZlllZ
        WeZZWVlBWVlZAFlZWQAAAAAAAAAAAAAAAABZWVkAWVlZAFlZWXtZWVnSWVlZFFlZWQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFlZ
        WQBZWVkUWVlZ0llZWXtZWVkAWVlZAAAAAAAAAAAAAAAAAFlZWQBZWVkAWVlZg1lZWchZWVkMWVlZAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAWVlZAFlZWQxZWVnIWVlZg1lZWQBZWVkAAAAAAAAAAAAAAAAAWVlZAFlZWQBZWVmDWVlZyFlZ
        WQxZWVkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABZWVkAWVlZDFlZWchZWVmDWVlZAFlZWQAAAAAAAAAAAAAAAABZWVkAWVlZAFlZ
        WYNZWVnIWVlZDFlZWQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFlZWQBZWVkMWVlZyFlZWYNZWVkAWVlZAAAAAAAAAAAAAAAAAGFo
        RABZWVkAWltXg1pbV8hbXFUMW11VAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAW11VAFtcVQxaW1fIWltXg1lZWQBhaEQAAAAAACgC
        1gAoAtYfKALWYicB2HA7JKW6QC2Y4SsHz3goAtZxKALWcigC1nIoAtZyKALWcigC1nIoAtZyKALWcigC
        1nIoAtZyKALWcigC1nIoAtZyKALWcigC1nIoAtZyKALWcigC1nIoAtZxKwfPeEAtmOE7JKW7JwDYYCgC
        1h4oAtYAKALWMigC1sgoAtb/KALW/ygC1/4oAdf9KALW/ygC1v8oAtb/KALW/ygC1v8oAtb/KALW/ygC
        1v8oAtb/KALW/ygC1v8oAtb/KALW/ygC1v8oAtb/KALW/ygC1v8oAtb/KALW/ygC1v8oAtb/KAHX/SgC
        1/4oAtb/KALWxygC1jEoAtanKALW/CgC1pcoAtZXKALWVigC1lYoAtZWKALWVigC1lYoAtZWKALWVigC
        1lYoAtZWKALWVigC1lYoAtZWKALWVigC1lYoAtZWKALWVigC1lYoAtZWKALWVigC1lYoAtZWKALWVigC
        1lYoAtZWKALWVygC1pgoAtb8KALWpigC1s8oAtbmKALWJSgC1gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAoAtYAKALWJSgC1ucoAtbPKALW0SgC1uIoAtYgKALWHigC1jIoAtYyKALWMigC
        1jIoAtYyKALWMigC1jIoAtYyKALWMigC1jIoAtYyKALWMigC1jIoAtYyKALWMigC1jIoAtYyKALWMigC
        1jIoAtYyKALWMigC1jIoAtYyKALWMigC1i4oAtYwKALW4SgC1tEoAtbRKALW4CgC1jsoAtbJKAHX8icB
        2O8oAtbyKALW8ygC1vMoAtbzKALW8ygC1vMoAtbzKALW8ygC1vMoAtbzKALW8ygC1vMoAtbzKALW8ygC
        1vMoAtbzKALW8ygC1vMoAtbzKALW8ygC1vInAdjvKAHX8CgC1qooAtbjKALW0CgC1tEoAtbhKALWLSgB
        14AyFLzXNhuy7SkE060oAtapKALWqSgC1qkoAtapKALWqSgC1qkoAtapKALWqSgC1qkoAtapKALWqSgC
        1qkoAtapKALWqSgC1qkoAtapKALWqSgC1qkoAtapKQTTrTYbsu0yFLzTKAHXcSgC1uEoAtbRKALWzSgC
        1usoAtYvRDOPAFlYWoNYWFrJUUtsDxAA/wIiAd8CAgD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA
        /wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wACAP8AIgHfAhAA/wJRS2wPWFhayVpaWIAkAOArKALW6ygC
        1swoAtaPKALW/CgC1sInANmNSDqFylpaWMdZWVkMWVlZAFpaWAhZWlgdWVlYH1lZWB9ZWVgfWVlYH1lZ
        WB9ZWVgfWVlYH1lZWB9ZWVgfWVlYH1lZWB9ZWVgfWVlYH1laWB1aWlgIWVlZAFlZWQxaWljGSDqFyycA
        2MEoAtb8KALWjigC1hooAtafKALW8ScB2PlBL5b/WlpXxVlZWQxZWVkAWVlZWFlZWd1ZWVnfWVlZ3llZ
        Wd5ZWVneWVlZ3llZWd5ZWVneWVlZ3llZWd5ZWVneWVlZ3llZWd5ZWVnfWVlZ3VlZWVhZWVkAWVlZDFpa
        V8VBL5b/JwHY8SgC1p4oAtYaKALWACgC1gooAtYyJQDdO1BIcaJZWVjIWVlZDFlZWQBZWVkgWVlZWllZ
        WVxZWVlcWVlZXFlZWVxZWVlcWVlZXFlZWVxZWVlcWVlZXFlZWVxZWVlcWVlZXFlZWV1ZWVlaWVlZIFlZ
        WQBZWVkMWVlYyFBIcaIkAN8vKALWCigC1gAAAAAAAAAAAF9kSQBYWFoAWVlZg1lZWchZWVkMWVlZAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAWVlZAFlZWQxZWVnIWVlZg1hYWgBfZEkAAAAAAAAAAAAAAAAAWVlZAFlZWQBZWVmDWVlZyFlZ
        WQxIOoUAKALWBygC1jEoAtZ/KALWHSgC1gBYV1wAWVlZAFlZWRFZWVkfWVlZH1lZWR9ZWVkfWVlZH1lZ
        WR9ZWVkfWVlZHllZWQhZWVkAWVlZDFlZWchZWVmDWVlZAFlZWQAAAAAAAAAAAAAAAABZWVkAWVlZAFlZ
        WYNZWVnIWVlZDDESvgAoAtZYKALW4ygC1vwoAtapKALWFzITvQBZWVkFWVlZl1lZWeFZWVneWVlZ3llZ
        Wd5ZWVneWVlZ3llZWd9ZWVndWVlZWFlZWQBZWVkMWVlZyFlZWYNZWVkAWVlZAAAAAAAAAAAAAAAAAFlZ
        WQBZWVkAWVlZg1lZWchZWVkMOiKoACgC1iAoAtZWKALWbCgC1uYoAtZpKQTTAFlZWQFZWVk5WVlZXVlZ
        WVxZWVlcWVlZXFlZWVxZWVlcWVlZXVlZWVpZWVkgWVlZAFlZWQxZWVnIWVlZg1lZWQBZWVkAAAAAAAAA
        AAAAAAAAWVlZAFlZWQBZWVmDWVlZyFlZWQxWVGAAKALWACgC1iMoAtZpKALW5ygC1mkoAtYAKALWAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZWVkAWVlZDFlZWchZWVmDWVlZAFlZ
        WQAAAAAAAAAAAAAAAABZWVkAWVlZAFlZWYNZWVnIWVlZDDMWuQAoAtYyKALW1CgC1uQoAtagKALWGCgC
        1gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZWVkAWVlZAVlZWRJZWVkfWVlZH1lZWR9ZWVkqWVlZ0FlZ
        WYNZWVkAWVlZAAAAAAAAAAAAAAAAAFlZWQBZWVkAWVlZg1lZWchZWVkMMBHBACgC1nYoAtbfKALWNigC
        1ggoAtYAKALWAAAAAAAAAAAAAAAAAAAAAAAAAAAAWVlZAFlZWQRZWVllWVlZzllZWd9ZWVneWVlZ3VlZ
        WeBZWVn6WVlZeFlZWQBZWVkAAAAAAAAAAAAAAAAAWVlZAFlZWQBZWVmDWVlZyFlZWQwxEr8AKALWUCgC
        1ukoAtazKALWpSgC1kAoAtYAKALWAAAAAAAAAAAAAAAAAFlZWQBZWVkAWVlZQllZWedZWVmXWVlZXFlZ
        WVlZWVmGWVlZ9FlZWcdZWVknWVlZAFlZWQAAAAAAAAAAAAAAAABZWVkAWVlZAFlZWYNZWVnIWVlZDEY3
        igAoAtYGKALWcSgC1u8oAta2KALWPygC1gAoAtYAAAAAAAAAAAAAAAAAWVlZAFlZWQBZWVl7WVlZ0llZ
        WRRZWVkAWVlZJ1lZWcRZWVnHWVlZK1lZWQBZWVkAAAAAAAAAAAAAAAAAAAAAAFlZWQBZWVkAWVlZg1lZ
        WchZWVkMWVlZACgC1gAoAtYLKALWPigC1gwoAtYAKALWAAAAAAAAAAAAAAAAAAAAAABZWVkAWVlZAFlZ
        WYNZWVnIWVlZC1lZWSpZWVnIWVlZyVlZWStZWVkAWVlZAAAAAAAAAAAAAAAAAAAAAAAAAAAAWVlZAFlZ
        WQBZWVmDWVlZyFlZWQxZWVkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFlZ
        WQBZWVkAWVlZg1lZWcdZWVk3WVlZyFlZWclZWVkrWVlZAFlZWQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABZWVkAWVlZAFlZWXtZWVnSWVlZFFlZWQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAWVlZAFlZWQBZWVmBWVlZ5FlZWdFZWVnIWVlZK1lZWQBZWVkAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFlZWQBZWVkAWVlZQVlZWeZZWVmWWVlZW1lZWVxZWVlcWVlZXFlZWVxZWVlcWVlZXFlZ
        WVxZWVlcWVlZXFlZWVxZWVlcWVlZWVlZWa1ZWVn/WVlZxllZWStZWVkAWVlZAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFlZWQBZWVkFWVlZc1lZWetZWVn+WVlZ/VlZWf1ZWVn9WVlZ/VlZ
        Wf1ZWVn9WVlZ/VlZWf1ZWVn9WVlZ/VlZWf1ZWVn9WVlZ/1lZWdRZWVkxWVlZAFlZWQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA8AAAB/AAAAfx///H8f//x/H//8fx///H8f//x4AAAAEAAAAAAAAAAB//
        //gAAAAAAAAAAAAAAAAQf/8AAQAAQAEAAECBAABB8f//x/EOAEfxBABH8QQAR/GH/8fxB/gH8Q/wB/EH
        8AfxB/EP8Y/wH/H/8D/x//B/8AAA//AAAf8=
</value>
  </data>
</root>